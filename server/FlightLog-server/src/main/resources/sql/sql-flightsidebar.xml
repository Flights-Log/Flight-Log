<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bitc.fullstack503.flightlog.flightlogserver.mapper.FlightSideBarServiceMapper">

    <!--   예매조회 -->
    <select id="unusercheck" parameterType="map" resultType="bitc.fullstack503.flightlog.flightlogserver.dto.FlightReservationCheckDTO">
        SELECT
        fr.flight_reno AS flight_reno,
        frm.flight_mem_lastName AS last_name,
        frm.flight_mem_firstName AS first_name,

        fi_start.flight_info_startCity AS start_city,
        fi_start.flight_info_arrivalCity AS arrival_city,
        DATE_FORMAT(fr.flight_reserveSdate, '%Y-%m-%d') AS departure_date,
        fi_start.flight_info_startTime AS departure_time,
        fi_start.flight_info_arrivalTime AS arrival_time,

        fr.flight_memberNum AS num_passengers,
        frm.flight_mem_start_seatNum AS seat_number,
        frm.flight_passport AS passport,
        frm.flight_mem_luggage AS luggage,

        fi_arr.flight_info_startCity AS return_start_city,
        fi_arr.flight_info_arrivalCity AS return_arrival_city,
        DATE_FORMAT(fr.flight_reserveEdate, '%Y-%m-%d') AS return_departure_date,
        fi_arr.flight_info_startTime AS return_departure_time,
        fi_arr.flight_info_arrivalTime AS return_arrival_time,

        frm.flight_mem_arrive_seatNum AS return_seat_number,

        frm.flight_arr_payCheck AS arr_payCheck,
        fr.flight_arr_id

        FROM flight_reserve fr
        JOIN flight_reserve_member frm ON fr.flight_reno = frm.flight_reno
        JOIN flight_info fi_start ON fr.flight_start_id = fi_start.flight_id
        LEFT JOIN flight_info fi_arr ON fr.flight_arr_id = fi_arr.flight_id
        where frm.flight_reno = #{nonmemberReservationNumber}
        and frm.flight_passport = #{nonmemberPassnum}
    </select>

    <!--  로그인한 사용자 정보 조회  -->
    <select id="isUserInfo" parameterType="map" resultType="int">
        select count(*) as cnt
        from flight_user
        where flight_user_id = #{inputUserId} and flight_user_pw = #{inputUserPw}
    </select>

    <!--  사용자 정보 가져오기  -->
    <select id="getUserInfo" parameterType="String" resultType="bitc.fullstack503.flightlog.flightlogserver.dto.flightUserDTO">
        select *
        from flight_user
        where flight_user_id = #{inputUserId}
    </select>

    <!--  회원가입  -->
    <insert id="joinMember" parameterType="bitc.fullstack503.flightlog.flightlogserver.dto.flightUserDTO">
        INSERT INTO flight_user (
        flight_user_id,
        flight_user_firstname,
        flight_user_lastname,
        flight_user_ko_firstname,
        flight_user_ko_lastname,
        flight_user_pw,
        flight_user_birth,
        flight_user_phone,
        flight_user_gender,
        flight_user_email
        ) VALUES (
        #{flightUserId},
        #{flightUserFirstname},
        #{flightUserLastname},
        #{flightUserKoFirstname},
        #{flightUserKoLastname},
        #{flightUserPw},
        #{flightUserBirth},
        #{flightUserPhone},
        #{flightUserGender},
        #{flightUserEmail}
        )
    </insert>

    <!--  본인 정보 확인  -->
    <select id="selectUserInfoById" parameterType="String" resultType="bitc.fullstack503.flightlog.flightlogserver.dto.flightUserDTO">
        SELECT * FROM flight_user WHERE flight_user_id = #{userId}
    </select>

    <!--  본인 정보 수정  -->
    <update id="updateUserInfo" parameterType="bitc.fullstack503.flightlog.flightlogserver.dto.flightUserDTO">
        UPDATE flight_user
        SET
        flight_user_id = #{flightUserId},
        flight_user_email = #{flightUserEmail},
        flight_user_pw = #{flightUserPw},
        flight_user_firstname = #{flightUserFirstname},
        flight_user_lastname = #{flightUserLastname},
        flight_user_ko_firstname = #{flightUserKoFirstname},
        flight_user_ko_lastname = #{flightUserKoLastname},
        flight_user_phone = #{flightUserPhone},
        flight_user_gender = #{flightUserGender},
        flight_user_birth = #{flightUserBirth}
        WHERE
        flight_user_id = #{flightUserId}
    </update>

</mapper>